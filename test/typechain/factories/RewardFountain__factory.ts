/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RewardFountain,
  RewardFountainInterface,
} from "../RewardFountain";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_sousChef",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_rewardTokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_rewardRatio",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
    ],
    name: "SetRewardToken",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "yieldTokenAmount",
        type: "uint256",
      },
    ],
    name: "claimReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rewardTokens",
    outputs: [
      {
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "rewardRatio",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "address[]",
        name: "_rewardTokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_rewardRatio",
        type: "uint256[]",
      },
    ],
    name: "setRewardTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sousChef",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162000dd038038062000dd08339810160408190526200003491620003a9565b6200003f336200025a565b6001600160601b0319606084901b166080528051825114620000a85760405162461bcd60e51b815260206004820152601a60248201527f534f5553434845463a204c454e4754485f4e4f545f455155414c00000000000060448201526064015b60405180910390fd5b60005b8251811015620002505760006001600160a01b0316838281518110620000d557620000d56200048d565b60200260200101516001600160a01b03161415620001365760405162461bcd60e51b815260206004820152601f60248201527f534f5553434845463a20494e56414c49445f544f4b454e5f414444524553530060448201526064016200009f565b600160405180604001604052808584815181106200015857620001586200048d565b60200260200101516001600160a01b031681526020018484815181106200018357620001836200048d565b602090810291909101810151909152825460018082018555600094855293829020835160029092020180546001600160a01b0319166001600160a01b0390921691909117815591015191015582517fe8cb2044a080d04ecfd819099479fa93c46ee7c22c983d5f9514af92fffc33ec9082908590829081106200020a576200020a6200048d565b6020026020010151604051620002339291909182526001600160a01b0316602082015260400190565b60405180910390a1806200024781620004a3565b915050620000ab565b50505050620004cd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b0381168114620002c257600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715620003085762000308620002c7565b604052919050565b60006001600160401b038211156200032c576200032c620002c7565b5060051b60200190565b600082601f8301126200034857600080fd5b81516020620003616200035b8362000310565b620002dd565b82815260059290921b840181019181810190868411156200038157600080fd5b8286015b848110156200039e578051835291830191830162000385565b509695505050505050565b600080600060608486031215620003bf57600080fd5b620003ca84620002aa565b602085810151919450906001600160401b0380821115620003ea57600080fd5b818701915087601f830112620003ff57600080fd5b8151620004106200035b8262000310565b81815260059190911b8301840190848101908a8311156200043057600080fd5b938501935b8285101562000459576200044985620002aa565b8252938501939085019062000435565b60408a015190975094505050808311156200047357600080fd5b5050620004838682870162000336565b9150509250925092565b634e487b7160e01b600052603260045260246000fd5b6000600019821415620004c657634e487b7160e01b600052601160045260246000fd5b5060010190565b60805160601c6108de620004f260003960008181609c015261015701526108de6000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80637bb7bed11161005b5780637bb7bed1146100e35780638da5cb5b14610115578063eb29880114610126578063f2fde38b1461013957600080fd5b8063174e31c414610082578063233b256414610097578063715018a6146100db575b600080fd5b610095610090366004610635565b61014c565b005b6100be7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100956102d3565b6100f66100f136600461065f565b610309565b604080516001600160a01b0390931683526020830191909152016100d2565b6000546001600160a01b03166100be565b6100956101343660046106da565b610341565b6100956101473660046107eb565b61052e565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101bf5760405162461bcd60e51b815260206004820152601360248201527229a7aaa9a1a422a31d102327a92124a22222a760691b60448201526064015b60405180910390fd5b60015480156102ce5760005b818110156102cc576000600182815481106101e8576101e861080d565b60009182526020918290206040805180820190915260029092020180546001600160a01b0316808352600190910154928201929092529150158015906102315750602081015115155b156102b95780600001516001600160a01b03166340c10f198683602001518761025a9190610839565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b1580156102a057600080fd5b505af11580156102b4573d6000803e3d6000fd5b505050505b50806102c481610858565b9150506101cb565b505b505050565b6000546001600160a01b031633146102fd5760405162461bcd60e51b81526004016101b690610873565b61030760006105c9565b565b6001818154811061031957600080fd5b6000918252602090912060029091020180546001909101546001600160a01b03909116915082565b6000546001600160a01b0316331461036b5760405162461bcd60e51b81526004016101b690610873565b838214801561037a5750805184145b6103c65760405162461bcd60e51b815260206004820152601a60248201527f534f5553434845463a204c454e4754485f4e4f545f455155414c00000000000060448201526064016101b6565b60005b848110156105265760405180604001604052808585848181106103ee576103ee61080d565b905060200201602081019061040391906107eb565b6001600160a01b031681526020018383815181106104235761042361080d565b602002602001015181525060018787848181106104425761044261080d565b90506020020135815481106104595761045961080d565b600091825260209182902083516002929092020180546001600160a01b0319166001600160a01b039092169190911781559101516001909101557fe8cb2044a080d04ecfd819099479fa93c46ee7c22c983d5f9514af92fffc33ec8686838181106104c6576104c661080d565b905060200201358585848181106104df576104df61080d565b90506020020160208101906104f491906107eb565b604080519283526001600160a01b0390911660208301520160405180910390a18061051e81610858565b9150506103c9565b505050505050565b6000546001600160a01b031633146105585760405162461bcd60e51b81526004016101b690610873565b6001600160a01b0381166105bd5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101b6565b6105c6816105c9565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461063057600080fd5b919050565b6000806040838503121561064857600080fd5b61065183610619565b946020939093013593505050565b60006020828403121561067157600080fd5b5035919050565b60008083601f84011261068a57600080fd5b50813567ffffffffffffffff8111156106a257600080fd5b6020830191508360208260051b85010111156106bd57600080fd5b9250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806000606086880312156106f257600080fd5b853567ffffffffffffffff8082111561070a57600080fd5b61071689838a01610678565b909750955060209150878201358181111561073057600080fd5b61073c8a828b01610678565b90965094505060408801358181111561075457600080fd5b8801601f81018a1361076557600080fd5b803582811115610777576107776106c4565b8060051b604051601f19603f8301168101818110868211171561079c5761079c6106c4565b60405291825284820193508281018501918c8311156107ba57600080fd5b928501925b828410156107d8578335855293850193928501926107bf565b8096505050505050509295509295909350565b6000602082840312156107fd57600080fd5b61080682610619565b9392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561085357610853610823565b500290565b600060001982141561086c5761086c610823565b5060010190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea264697066735822122019acd019c8acc1298bbb3c6bc7d147f1b41c0d3f43e680d19d3571e3592b9ea364736f6c63430008080033";

export class RewardFountain__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _sousChef: string,
    _rewardTokens: string[],
    _rewardRatio: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RewardFountain> {
    return super.deploy(
      _sousChef,
      _rewardTokens,
      _rewardRatio,
      overrides || {}
    ) as Promise<RewardFountain>;
  }
  getDeployTransaction(
    _sousChef: string,
    _rewardTokens: string[],
    _rewardRatio: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _sousChef,
      _rewardTokens,
      _rewardRatio,
      overrides || {}
    );
  }
  attach(address: string): RewardFountain {
    return super.attach(address) as RewardFountain;
  }
  connect(signer: Signer): RewardFountain__factory {
    return super.connect(signer) as RewardFountain__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RewardFountainInterface {
    return new utils.Interface(_abi) as RewardFountainInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RewardFountain {
    return new Contract(address, _abi, signerOrProvider) as RewardFountain;
  }
}
