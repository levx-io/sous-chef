/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RewardFountain,
  RewardFountainInterface,
} from "../RewardFountain";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_sousChef",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_rewardTokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_rewardRatio",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
    ],
    name: "SetRewardToken",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_rewardTokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_rewardRatio",
        type: "uint256[]",
      },
    ],
    name: "addRewardTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "yieldTokenAmount",
        type: "uint256",
      },
    ],
    name: "claimReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rewardTokens",
    outputs: [
      {
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "rewardRatio",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "address[]",
        name: "_rewardTokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_rewardRatio",
        type: "uint256[]",
      },
    ],
    name: "setRewardTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sousChef",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162001032380380620010328339810160408190526200003491620003a4565b6200003f3362000255565b8051825114620000965760405162461bcd60e51b815260206004820152601a60248201527f534f5553434845463a204c454e4754485f4e4f545f455155414c00000000000060448201526064015b60405180910390fd5b6001600160a01b03831660805260005b82518110156200024b5760006001600160a01b0316838281518110620000d057620000d062000488565b60200260200101516001600160a01b03161415620001315760405162461bcd60e51b815260206004820152601f60248201527f534f5553434845463a20494e56414c49445f544f4b454e5f414444524553530060448201526064016200008d565b6001604051806040016040528085848151811062000153576200015362000488565b60200260200101516001600160a01b031681526020018484815181106200017e576200017e62000488565b602090810291909101810151909152825460018082018555600094855293829020835160029092020180546001600160a01b0319166001600160a01b0390921691909117815591015191015582517fe8cb2044a080d04ecfd819099479fa93c46ee7c22c983d5f9514af92fffc33ec90829085908290811062000205576200020562000488565b60200260200101516040516200022e9291909182526001600160a01b0316602082015260400190565b60405180910390a18062000242816200049e565b915050620000a6565b50505050620004c8565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b0381168114620002bd57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715620003035762000303620002c2565b604052919050565b60006001600160401b03821115620003275762000327620002c2565b5060051b60200190565b600082601f8301126200034357600080fd5b815160206200035c62000356836200030b565b620002d8565b82815260059290921b840181019181810190868411156200037c57600080fd5b8286015b8481101562000399578051835291830191830162000380565b509695505050505050565b600080600060608486031215620003ba57600080fd5b620003c584620002a5565b602085810151919450906001600160401b0380821115620003e557600080fd5b818701915087601f830112620003fa57600080fd5b81516200040b62000356826200030b565b81815260059190911b8301840190848101908a8311156200042b57600080fd5b938501935b8285101562000454576200044485620002a5565b8252938501939085019062000430565b60408a015190975094505050808311156200046e57600080fd5b50506200047e8682870162000331565b9150509250925092565b634e487b7160e01b600052603260045260246000fd5b6000600019821415620004c157634e487b7160e01b600052601160045260246000fd5b5060010190565b608051610b48620004ea6000396000818160a701526101750152610b486000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80637bb7bed11161005b5780637bb7bed1146101015780638da5cb5b14610133578063eb29880114610144578063f2fde38b1461015757600080fd5b8063174e31c41461008d578063233b2564146100a25780633ec4cf97146100e6578063715018a6146100f9575b600080fd5b6100a061009b366004610800565b61016a565b005b6100c97f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100a06100f4366004610927565b6102eb565b6100a061049e565b61011461010f366004610990565b6104d4565b604080516001600160a01b0390931683526020830191909152016100dd565b6000546001600160a01b03166100c9565b6100a06101523660046109a9565b61050c565b6100a0610165366004610a3d565b6106f9565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101dd5760405162461bcd60e51b815260206004820152601360248201527229a7aaa9a1a422a31d102327a92124a22222a760691b60448201526064015b60405180910390fd5b60015480156102e65760005b818110156102e45760006001828154811061020657610206610a5f565b60009182526020918290206040805180820190915260029092020180546001600160a01b03168083526001909101549282019290925291501580159061024f5750602081015115155b156102d15780600001516001600160a01b03166340c10f19868360200151876102789190610a8b565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b1580156102be57600080fd5b505af19250505080156102cf575060015b505b50806102dc81610aaa565b9150506101e9565b505b505050565b6000546001600160a01b031633146103155760405162461bcd60e51b81526004016101d490610ac5565b805182146103655760405162461bcd60e51b815260206004820152601a60248201527f534f5553434845463a204c454e4754485f4e4f545f455155414c00000000000060448201526064016101d4565b60015460005b83811015610497576001604051806040016040528087878581811061039257610392610a5f565b90506020020160208101906103a79190610a3d565b6001600160a01b031681526020018584815181106103c7576103c7610a5f565b602090810291909101810151909152825460018082018555600094855293829020835160029092020180546001600160a01b0319166001600160a01b039092169190911781559101519101557fe8cb2044a080d04ecfd819099479fa93c46ee7c22c983d5f9514af92fffc33ec61043e8284610afa565b86868481811061045057610450610a5f565b90506020020160208101906104659190610a3d565b604080519283526001600160a01b0390911660208301520160405180910390a18061048f81610aaa565b91505061036b565b5050505050565b6000546001600160a01b031633146104c85760405162461bcd60e51b81526004016101d490610ac5565b6104d26000610794565b565b600181815481106104e457600080fd5b6000918252602090912060029091020180546001909101546001600160a01b03909116915082565b6000546001600160a01b031633146105365760405162461bcd60e51b81526004016101d490610ac5565b83821480156105455750805182145b6105915760405162461bcd60e51b815260206004820152601a60248201527f534f5553434845463a204c454e4754485f4e4f545f455155414c00000000000060448201526064016101d4565b60005b848110156106f15760405180604001604052808585848181106105b9576105b9610a5f565b90506020020160208101906105ce9190610a3d565b6001600160a01b031681526020018383815181106105ee576105ee610a5f565b6020026020010151815250600187878481811061060d5761060d610a5f565b905060200201358154811061062457610624610a5f565b600091825260209182902083516002929092020180546001600160a01b0319166001600160a01b039092169190911781559101516001909101557fe8cb2044a080d04ecfd819099479fa93c46ee7c22c983d5f9514af92fffc33ec86868381811061069157610691610a5f565b905060200201358585848181106106aa576106aa610a5f565b90506020020160208101906106bf9190610a3d565b604080519283526001600160a01b0390911660208301520160405180910390a1806106e981610aaa565b915050610594565b505050505050565b6000546001600160a01b031633146107235760405162461bcd60e51b81526004016101d490610ac5565b6001600160a01b0381166107885760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101d4565b61079181610794565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146107fb57600080fd5b919050565b6000806040838503121561081357600080fd5b61081c836107e4565b946020939093013593505050565b60008083601f84011261083c57600080fd5b50813567ffffffffffffffff81111561085457600080fd5b6020830191508360208260051b850101111561086f57600080fd5b9250929050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261089d57600080fd5b8135602067ffffffffffffffff808311156108ba576108ba610876565b8260051b604051601f19603f830116810181811084821117156108df576108df610876565b6040529384528581018301938381019250878511156108fd57600080fd5b83870191505b8482101561091c57813583529183019190830190610903565b979650505050505050565b60008060006040848603121561093c57600080fd5b833567ffffffffffffffff8082111561095457600080fd5b6109608783880161082a565b9095509350602086013591508082111561097957600080fd5b506109868682870161088c565b9150509250925092565b6000602082840312156109a257600080fd5b5035919050565b6000806000806000606086880312156109c157600080fd5b853567ffffffffffffffff808211156109d957600080fd5b6109e589838a0161082a565b909750955060208801359150808211156109fe57600080fd5b610a0a89838a0161082a565b90955093506040880135915080821115610a2357600080fd5b50610a308882890161088c565b9150509295509295909350565b600060208284031215610a4f57600080fd5b610a58826107e4565b9392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610aa557610aa5610a75565b500290565b6000600019821415610abe57610abe610a75565b5060010190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115610b0d57610b0d610a75565b50019056fea264697066735822122037408c96a279cd6150f21289daf5797c037497e84927068f4b24d7e3b39725bb64736f6c63430008090033";

export class RewardFountain__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _sousChef: string,
    _rewardTokens: string[],
    _rewardRatio: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RewardFountain> {
    return super.deploy(
      _sousChef,
      _rewardTokens,
      _rewardRatio,
      overrides || {}
    ) as Promise<RewardFountain>;
  }
  getDeployTransaction(
    _sousChef: string,
    _rewardTokens: string[],
    _rewardRatio: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _sousChef,
      _rewardTokens,
      _rewardRatio,
      overrides || {}
    );
  }
  attach(address: string): RewardFountain {
    return super.attach(address) as RewardFountain;
  }
  connect(signer: Signer): RewardFountain__factory {
    return super.connect(signer) as RewardFountain__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RewardFountainInterface {
    return new utils.Interface(_abi) as RewardFountainInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RewardFountain {
    return new Contract(address, _abi, signerOrProvider) as RewardFountain;
  }
}
