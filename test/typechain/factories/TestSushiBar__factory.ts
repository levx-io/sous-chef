/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestSushiBar, TestSushiBarInterface } from "../TestSushiBar";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_sushi",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "enter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_share",
        type: "uint256",
      },
    ],
    name: "leave",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sushi",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200106d3803806200106d833981016040819052620000349162000168565b604080518082018252600881526729bab9b434a130b960c11b60208083019182528351808501909452600684526578535553484960d01b9084015281519192916200008291600391620000c2565b50805162000098906004906020840190620000c2565b5050600580546001600160a01b0319166001600160a01b03939093169290921790915550620001d7565b828054620000d0906200019a565b90600052602060002090601f016020900481019282620000f457600085556200013f565b82601f106200010f57805160ff19168380011785556200013f565b828001600101855582156200013f579182015b828111156200013f57825182559160200191906001019062000122565b506200014d92915062000151565b5090565b5b808211156200014d576000815560010162000152565b6000602082840312156200017b57600080fd5b81516001600160a01b03811681146200019357600080fd5b9392505050565b600181811c90821680620001af57607f821691505b60208210811415620001d157634e487b7160e01b600052602260045260246000fd5b50919050565b610e8680620001e76000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806367dfd4c91161008c578063a457c2d711610066578063a457c2d7146101e8578063a59f3e0c146101fb578063a9059cbb1461020e578063dd62ed3e1461022157600080fd5b806367dfd4c9146101a257806370a08231146101b757806395d89b41146101e057600080fd5b806318160ddd116100c857806318160ddd1461015b57806323b872dd1461016d578063313ce56714610180578063395093511461018f57600080fd5b806306fdde03146100ef578063095ea7b31461010d5780630a08790314610130575b600080fd5b6100f761025a565b6040516101049190610c16565b60405180910390f35b61012061011b366004610c87565b6102ec565b6040519015158152602001610104565b600554610143906001600160a01b031681565b6040516001600160a01b039091168152602001610104565b6002545b604051908152602001610104565b61012061017b366004610cb1565b610302565b60405160128152602001610104565b61012061019d366004610c87565b6103b1565b6101b56101b0366004610ced565b6103ed565b005b61015f6101c5366004610d06565b6001600160a01b031660009081526020819052604090205490565b6100f7610525565b6101206101f6366004610c87565b610534565b6101b5610209366004610ced565b6105cd565b61012061021c366004610c87565b6106d2565b61015f61022f366004610d21565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461026990610d54565b80601f016020809104026020016040519081016040528092919081815260200182805461029590610d54565b80156102e25780601f106102b7576101008083540402835291602001916102e2565b820191906000526020600020905b8154815290600101906020018083116102c557829003601f168201915b5050505050905090565b60006102f93384846106df565b50600192915050565b600061030f848484610804565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103995760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6103a685338584036106df565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102f99185906103e8908690610da5565b6106df565b60006103f860025490565b6005546040516370a0823160e01b815230600482015291925060009161048e918491610488916001600160a01b0316906370a082319060240160206040518083038186803b15801561044957600080fd5b505afa15801561045d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104819190610dbd565b86906109d2565b906109e5565b905061049a33846109f1565b60055460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044015b602060405180830381600087803b1580156104e757600080fd5b505af11580156104fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051f9190610dd6565b50505050565b60606004805461026990610d54565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156105b65760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610390565b6105c333858584036106df565b5060019392505050565b6005546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b15801561061157600080fd5b505afa158015610625573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106499190610dbd565b9050600061065660025490565b9050801580610663575081155b15610677576106723384610b37565b610695565b60006106878361048886856109d2565b90506106933382610b37565b505b6005546040516323b872dd60e01b8152336004820152306024820152604481018590526001600160a01b03909116906323b872dd906064016104cd565b60006102f9338484610804565b6001600160a01b0383166107415760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610390565b6001600160a01b0382166107a25760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610390565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166108685760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610390565b6001600160a01b0382166108ca5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610390565b6001600160a01b038316600090815260208190526040902054818110156109425760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610390565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610979908490610da5565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516109c591815260200190565b60405180910390a361051f565b60006109de8284610df8565b9392505050565b60006109de8284610e17565b6001600160a01b038216610a515760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610390565b6001600160a01b03821660009081526020819052604090205481811015610ac55760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610390565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610af4908490610e39565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016107f7565b6001600160a01b038216610b8d5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610390565b8060026000828254610b9f9190610da5565b90915550506001600160a01b03821660009081526020819052604081208054839290610bcc908490610da5565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600060208083528351808285015260005b81811015610c4357858101830151858201604001528201610c27565b81811115610c55576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610c8257600080fd5b919050565b60008060408385031215610c9a57600080fd5b610ca383610c6b565b946020939093013593505050565b600080600060608486031215610cc657600080fd5b610ccf84610c6b565b9250610cdd60208501610c6b565b9150604084013590509250925092565b600060208284031215610cff57600080fd5b5035919050565b600060208284031215610d1857600080fd5b6109de82610c6b565b60008060408385031215610d3457600080fd5b610d3d83610c6b565b9150610d4b60208401610c6b565b90509250929050565b600181811c90821680610d6857607f821691505b60208210811415610d8957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610db857610db8610d8f565b500190565b600060208284031215610dcf57600080fd5b5051919050565b600060208284031215610de857600080fd5b815180151581146109de57600080fd5b6000816000190483118215151615610e1257610e12610d8f565b500290565b600082610e3457634e487b7160e01b600052601260045260246000fd5b500490565b600082821015610e4b57610e4b610d8f565b50039056fea26469706673582212209d81bbebfd3be19d1e6b4e66f10d34370579764afb6bc2047d8140886d417f2764736f6c63430008080033";

export class TestSushiBar__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _sushi: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestSushiBar> {
    return super.deploy(_sushi, overrides || {}) as Promise<TestSushiBar>;
  }
  getDeployTransaction(
    _sushi: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_sushi, overrides || {});
  }
  attach(address: string): TestSushiBar {
    return super.attach(address) as TestSushiBar;
  }
  connect(signer: Signer): TestSushiBar__factory {
    return super.connect(signer) as TestSushiBar__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestSushiBarInterface {
    return new utils.Interface(_abi) as TestSushiBarInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestSushiBar {
    return new Contract(address, _abi, signerOrProvider) as TestSushiBar;
  }
}
