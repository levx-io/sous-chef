/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { RewardBucket, RewardBucketInterface } from "../RewardBucket";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_sousChef",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_rewardTokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_rewardRatio",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
    ],
    name: "SetRewardToken",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_rewardTokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_rewardRatio",
        type: "uint256[]",
      },
    ],
    name: "addRewardTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "yieldTokenAmount",
        type: "uint256",
      },
    ],
    name: "claimReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rewardTokens",
    outputs: [
      {
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "rewardRatio",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "address[]",
        name: "_rewardTokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_rewardRatio",
        type: "uint256[]",
      },
    ],
    name: "setRewardTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sousChef",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "withdrawRewardTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516200136d3803806200136d8339810160408190526200003491620003a4565b6200003f3362000255565b8051825114620000965760405162461bcd60e51b815260206004820152601a60248201527f534f5553434845463a204c454e4754485f4e4f545f455155414c00000000000060448201526064015b60405180910390fd5b6001600160a01b03831660805260005b82518110156200024b5760006001600160a01b0316838281518110620000d057620000d062000488565b60200260200101516001600160a01b03161415620001315760405162461bcd60e51b815260206004820152601f60248201527f534f5553434845463a20494e56414c49445f544f4b454e5f414444524553530060448201526064016200008d565b6001604051806040016040528085848151811062000153576200015362000488565b60200260200101516001600160a01b031681526020018484815181106200017e576200017e62000488565b602090810291909101810151909152825460018082018555600094855293829020835160029092020180546001600160a01b0319166001600160a01b0390921691909117815591015191015582517fe8cb2044a080d04ecfd819099479fa93c46ee7c22c983d5f9514af92fffc33ec90829085908290811062000205576200020562000488565b60200260200101516040516200022e9291909182526001600160a01b0316602082015260400190565b60405180910390a18062000242816200049e565b915050620000a6565b50505050620004c8565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b0381168114620002bd57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715620003035762000303620002c2565b604052919050565b60006001600160401b03821115620003275762000327620002c2565b5060051b60200190565b600082601f8301126200034357600080fd5b815160206200035c62000356836200030b565b620002d8565b82815260059290921b840181019181810190868411156200037c57600080fd5b8286015b8481101562000399578051835291830191830162000380565b509695505050505050565b600080600060608486031215620003ba57600080fd5b620003c584620002a5565b602085810151919450906001600160401b0380821115620003e557600080fd5b818701915087601f830112620003fa57600080fd5b81516200040b62000356826200030b565b81815260059190911b8301840190848101908a8311156200042b57600080fd5b938501935b8285101562000454576200044485620002a5565b8252938501939085019062000430565b60408a015190975094505050808311156200046e57600080fd5b50506200047e8682870162000331565b9150509250925092565b634e487b7160e01b600052603260045260246000fd5b6000600019821415620004c157634e487b7160e01b600052601160045260246000fd5b5060010190565b608051610e83620004ea6000396000818160b201526101930152610e836000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063715018a611610066578063715018a6146101175780637bb7bed11461011f5780638da5cb5b14610151578063eb29880114610162578063f2fde38b1461017557600080fd5b8063174e31c414610098578063233b2564146100ad5780633ec4cf97146100f157806353a7499214610104575b600080fd5b6100ab6100a6366004610a7f565b610188565b005b6100d47f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100ab6100ff366004610ba6565b61032e565b6100ab610112366004610c0f565b6104e1565b6100ab610597565b61013261012d366004610c90565b6105cd565b604080516001600160a01b0390931683526020830191909152016100e8565b6000546001600160a01b03166100d4565b6100ab610170366004610ca9565b610605565b6100ab610183366004610d3d565b6107ea565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101fb5760405162461bcd60e51b815260206004820152601360248201527229a7aaa9a1a422a31d102327a92124a22222a760691b60448201526064015b60405180910390fd5b60015480156103295760005b818110156103275760006001828154811061022457610224610d5f565b60009182526020918290206040805180820190915260029092020180546001600160a01b0316808352600190910154928201929092529150158015906102f15750602081015181516040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b1580156102ac57600080fd5b505afa1580156102c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e49190610d75565b6102ee9190610da4565b15155b156103145761031481600001518683602001518761030f9190610da4565b610885565b508061031f81610dc3565b915050610207565b505b505050565b6000546001600160a01b031633146103585760405162461bcd60e51b81526004016101f290610dde565b805182146103a85760405162461bcd60e51b815260206004820152601a60248201527f534f5553434845463a204c454e4754485f4e4f545f455155414c00000000000060448201526064016101f2565b60015460005b838110156104da57600160405180604001604052808787858181106103d5576103d5610d5f565b90506020020160208101906103ea9190610d3d565b6001600160a01b0316815260200185848151811061040a5761040a610d5f565b602090810291909101810151909152825460018082018555600094855293829020835160029092020180546001600160a01b0319166001600160a01b039092169190911781559101519101557fe8cb2044a080d04ecfd819099479fa93c46ee7c22c983d5f9514af92fffc33ec6104818284610e13565b86868481811061049357610493610d5f565b90506020020160208101906104a89190610d3d565b604080519283526001600160a01b0390911660208301520160405180910390a1806104d281610dc3565b9150506103ae565b5050505050565b6000546001600160a01b0316331461050b5760405162461bcd60e51b81526004016101f290610dde565b60005b8381101561058f5761057d600186868481811061052d5761052d610d5f565b905060200201358154811061054457610544610d5f565b60009182526020909120600290910201546001600160a01b03168785858581811061057157610571610d5f565b90506020020135610885565b8061058781610dc3565b91505061050e565b505050505050565b6000546001600160a01b031633146105c15760405162461bcd60e51b81526004016101f290610dde565b6105cb6000610a13565b565b600181815481106105dd57600080fd5b6000918252602090912060029091020180546001909101546001600160a01b03909116915082565b6000546001600160a01b0316331461062f5760405162461bcd60e51b81526004016101f290610dde565b838214801561063e5750805182145b61068a5760405162461bcd60e51b815260206004820152601a60248201527f534f5553434845463a204c454e4754485f4e4f545f455155414c00000000000060448201526064016101f2565b60005b8481101561058f5760405180604001604052808585848181106106b2576106b2610d5f565b90506020020160208101906106c79190610d3d565b6001600160a01b031681526020018383815181106106e7576106e7610d5f565b6020026020010151815250600187878481811061070657610706610d5f565b905060200201358154811061071d5761071d610d5f565b600091825260209182902083516002929092020180546001600160a01b0319166001600160a01b039092169190911781559101516001909101557fe8cb2044a080d04ecfd819099479fa93c46ee7c22c983d5f9514af92fffc33ec86868381811061078a5761078a610d5f565b905060200201358585848181106107a3576107a3610d5f565b90506020020160208101906107b89190610d3d565b604080519283526001600160a01b0390911660208301520160405180910390a1806107e281610dc3565b91505061068d565b6000546001600160a01b031633146108145760405162461bcd60e51b81526004016101f290610dde565b6001600160a01b0381166108795760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101f2565b61088281610a13565b50565b6040516370a0823160e01b81523060048201526000906001600160a01b038516906370a082319060240160206040518083038186803b1580156108c757600080fd5b505afa1580156108db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ff9190610d75565b9050808211156109915760405163a9059cbb60e01b81526001600160a01b0384811660048301526024820183905285169063a9059cbb90604401602060405180830381600087803b15801561095357600080fd5b505af1158015610967573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098b9190610e2b565b50610327565b60405163a9059cbb60e01b81526001600160a01b0384811660048301526024820184905285169063a9059cbb90604401602060405180830381600087803b1580156109db57600080fd5b505af11580156109ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104da9190610e2b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b0381168114610a7a57600080fd5b919050565b60008060408385031215610a9257600080fd5b610a9b83610a63565b946020939093013593505050565b60008083601f840112610abb57600080fd5b50813567ffffffffffffffff811115610ad357600080fd5b6020830191508360208260051b8501011115610aee57600080fd5b9250929050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610b1c57600080fd5b8135602067ffffffffffffffff80831115610b3957610b39610af5565b8260051b604051601f19603f83011681018181108482111715610b5e57610b5e610af5565b604052938452858101830193838101925087851115610b7c57600080fd5b83870191505b84821015610b9b57813583529183019190830190610b82565b979650505050505050565b600080600060408486031215610bbb57600080fd5b833567ffffffffffffffff80821115610bd357600080fd5b610bdf87838801610aa9565b90955093506020860135915080821115610bf857600080fd5b50610c0586828701610b0b565b9150509250925092565b600080600080600060608688031215610c2757600080fd5b610c3086610a63565b9450602086013567ffffffffffffffff80821115610c4d57600080fd5b610c5989838a01610aa9565b90965094506040880135915080821115610c7257600080fd5b50610c7f88828901610aa9565b969995985093965092949392505050565b600060208284031215610ca257600080fd5b5035919050565b600080600080600060608688031215610cc157600080fd5b853567ffffffffffffffff80821115610cd957600080fd5b610ce589838a01610aa9565b90975095506020880135915080821115610cfe57600080fd5b610d0a89838a01610aa9565b90955093506040880135915080821115610d2357600080fd5b50610d3088828901610b0b565b9150509295509295909350565b600060208284031215610d4f57600080fd5b610d5882610a63565b9392505050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610d8757600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610dbe57610dbe610d8e565b500290565b6000600019821415610dd757610dd7610d8e565b5060010190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115610e2657610e26610d8e565b500190565b600060208284031215610e3d57600080fd5b81518015158114610d5857600080fdfea2646970667358221220af0cf3e3f745335347e95002bd9e060ecf28ecc27502d88a46791bcc1ff1bb1964736f6c63430008090033";

export class RewardBucket__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _sousChef: string,
    _rewardTokens: string[],
    _rewardRatio: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RewardBucket> {
    return super.deploy(
      _sousChef,
      _rewardTokens,
      _rewardRatio,
      overrides || {}
    ) as Promise<RewardBucket>;
  }
  getDeployTransaction(
    _sousChef: string,
    _rewardTokens: string[],
    _rewardRatio: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _sousChef,
      _rewardTokens,
      _rewardRatio,
      overrides || {}
    );
  }
  attach(address: string): RewardBucket {
    return super.attach(address) as RewardBucket;
  }
  connect(signer: Signer): RewardBucket__factory {
    return super.connect(signer) as RewardBucket__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RewardBucketInterface {
    return new utils.Interface(_abi) as RewardBucketInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RewardBucket {
    return new Contract(address, _abi, signerOrProvider) as RewardBucket;
  }
}
